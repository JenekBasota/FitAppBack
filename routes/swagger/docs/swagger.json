{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Authentication API",
    "description": "API для аутентификации и проверки пользователей."
  },
  "host": "127.0.0.1:5000",
  "basePath": "/api",
  "schemes": ["http"],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Логин пользователя",
        "description": "Позволяет пользователю войти в систему и получить токен.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": { "type": "string" },
                "password": { "type": "string" }
              },
              "required": ["username", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный логин",
            "schema": {
              "type": "object",
              "properties": {
                "msg": { "type": "string" },
                "access_token": { "type": "string" },
                "status": { "type": "integer" },
                "data": {
                  "type": "object",
                  "properties": {
                    "username": { "type": "string" },
                    "email": { "type": "string" },
                    "weight": { "type": "integer" },
                    "height": { "type": "integer" },
                    "gender": { "type": "string" },
                    "balance": { "type": "integer" },
                    "lives": { "type": "integer" },
                    "programs": { "type": "integer" }
                  }
                }
              }
            }
          },
          "401": { "description": "Неправильный логин или пароль" },
          "400": { "description": "Некорректные данные" }
        }
      }
    },
    "/auth/unique_check": {
      "post": {
        "summary": "Проверка уникальности",
        "description": "Проверяет, существует ли уже пользователь с данным именем или email.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": { "type": "string" },
                "email": { "type": "string" }
              },
              "required": ["username", "email"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Уникальные данные",
            "schema": {
              "type": "object",
              "properties": {
                "msg": { "type": "string" },
                "status": { "type": "integer" }
              }
            }
          },
          "401": { "description": "Логин или email уже заняты" },
          "400": { "description": "Некорректные данные" }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Регистрация пользователя",
        "description": "Позволяет зарегистрировать нового пользователя.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": { "type": "string" },
                "email": { "type": "string" },
                "weight": { "type": "integer" },
                "height": { "type": "integer" },
                "gender": { "type": "string" },
                "password": { "type": "string" },
                "programs": { "type": "integer" }
              },
              "required": ["username", "email", "password", "programs"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь успешно зарегистрирован",
            "schema": {
              "type": "object",
              "properties": {
                "msg": { "type": "string" },
                "access_token": { "type": "string" },
                "status": { "type": "integer" },
                "data": {
                  "type": "object",
                  "properties": {
                    "username": { "type": "string" },
                    "email": { "type": "string" },
                    "weight": { "type": "integer" },
                    "height": { "type": "integer" },
                    "gender": { "type": "string" },
                    "balance": { "type": "integer" },
                    "lives": { "type": "integer" },
                    "programs": { "type": "integer" }
                  }
                }
              }
            }
          },
          "400": { "description": "Некорректные данные" }
        }
      }
    },
    "/jwt/check": {
      "get": {
        "summary": "Проверка токена",
        "description": "Возвращает данные текущего пользователя на основе токена.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "Bearer токен для авторизации"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешная проверка",
            "schema": {
              "type": "object",
              "properties": {
                "msg": { "type": "string" },
                "status": { "type": "integer" },
                "data": {
                  "type": "object",
                  "properties": {
                    "username": { "type": "string" },
                    "email": { "type": "string" },
                    "weight": { "type": "integer" },
                    "height": { "type": "integer" },
                    "gender": { "type": "string" },
                    "balance": { "type": "integer" },
                    "lives": { "type": "integer" },
                    "programs": { "type": "integer" }
                  }
                }
              }
            }
          },
          "401": { "description": "Токен недействителен" }
        }
      }
    }
  }
}
